no_tls: true
federation_verify_certificates: false
accept_keys_insecurely: true
tls_fingerprints: []
trusted_key_servers: []

server_name: "localhost:{port}"

soft_file_limit: 0

listeners:
  - port: {port}
    tls: false
    bind_addresses: ['127.0.0.1']
    type: http

    x_forwarded: false

    resources:
      - names: [client]  # changed
        compress: true
      - names: [federation]
        compress: false

database:
  name: "sqlite3"
  args:
    database: ":memory:"  # changed

user_directory:
  enabled: true
  search_all_users: true

event_cache_size: "10K"

rc_message:
  per_second:   50000  # changed
  burst_count: 100000  # changed

rc_registration:
  per_second: 0.17
  burst_count: 3

rc_login:
  address:
    per_second: 100
    burst_count: 100
  account:
    per_second: 100
    burst_count: 100
  failed_attempts:
    per_second: 100
    burst_count: 100

rc_federation:
  window_size: 1000
  sleep_limit: 10
  sleep_delay: 500
  reject_limit: 50
  concurrent: 3

max_upload_size: "0M"  # changed
max_image_pixels: "0M"  # changed
url_preview_enabled: false

enable_registration: true  # changed
bcrypt_rounds: 12
allow_guest_access: false
enable_metrics: false
report_stats: false

# A list of event types that will be included in the room_invite_state
room_invite_state_types:
    - "m.room.join_rules"
    - "m.room.canonical_alias"
    - "m.room.avatar"
    - "m.room.name"

# A list of application service config file to use
app_service_config_files: []

expire_access_token: false
old_signing_keys: {{}}
key_refresh_interval: "1d" # 1 Day.

password_config:
   enabled: true

password_providers:
  - module: 'raiden.tests.utils.transport.EthAuthProvider'
    config:
      enabled: true
  - module: 'raiden.tests.utils.transport.NoTLSFederationMonkeyPatchProvider'
    config:
      enabled: true
  - module: 'raiden.tests.utils.transport.AdminUserAuthProvider'
    config:
      enabled: true
      admin_credentials: {admin_credentials}

# Whether to allow non server admins to create groups on this server
enable_group_creation: false

# we need to set an empty blacklist to not blacklist localhost
ip_range_blacklist: []
